# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  # Azure Resource Manager connection created during pipeline creation
  # azureServiceConnectionId: 'b3b07ba4-c98c-451d-886b-25a0409a4203'

  # Web app name
  # webAppName: 'fyp2024-app'

  # # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # # Environment name
  # environmentName: 'fyp2024-app'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

  # Python version: 3.10
  pythonVersion: '3.10'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    - script: |
        python -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip
        pip install setup
        pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: "Install requirements"

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: Deploy App
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
  
            - script: |
                sudo apt update
                sudo apt install -y python3 python3-pip
              displayName: 'Install Dependencies'

            - script: |
                pip3 install Flask
                cd $(Build.Repository.LocalPath)/flask_app
                python3 app.py
              displayName: 'Deploy Flask App'

            - task: DownloadSecureFile@1
              name: SSHKey
              displayName: 'Getting Key'
              inputs:
                secureFile: 'Test2_key(3).pem'
        
            - task: AzureCLI@2
              inputs:
                azureSubscription: 'azuredev1'
                scriptType: 'bash'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  scp -o StrictHostKeyChecking=no -v -i $(SSHKey.secureFilePath) -r $(Build.Repository.LocalPath)/flask_app azureuser@68.219.181.154:/azureuser/
              displayName: 'Copy Files to VM'

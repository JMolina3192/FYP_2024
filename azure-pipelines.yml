# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: BuildJob
        displayName: Build and Archive
        pool:
          vmImage: 'ubuntu-22.04'
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.10'
              addToPath: true
            displayName: 'Use Python 3.10'
          - script: |
              python -m venv antenv
              source antenv/bin/activate
              python -m pip install --upgrade pip
              pip install setuptools
              pip install -r requirements.txt
            displayName: 'Set up Python environment and install dependencies'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)'
              ArtifactName: 'repository'
              publishLocation: 'container'
            displayName: 'Publish repository'

          # - script: |
          #     zip -r $(Build.ArtifactStagingDirectory)/repository.zip .
          #   displayName: 'Archive repository'
          # - publish: $(Build.ArtifactStagingDirectory)/repository.zip
          #   artifact: repository
          #   displayName: 'Publish repository'
            
  - stage: Deploy
    displayName: Deploy App
    jobs:
      - deployment: DeploymentJob
        displayName: Web Deploy
        environment: 
          name: Test4
          resourceType: VirtualMachine
          resourceName: Test4
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadBuildArtifacts@0
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    artifactName: 'repository'
                    downloadPath: '$(System.ArtifactsDirectory)'
                - script: |
                    sudo cp -a $(System.ArtifactsDirectory)/repository/. /home/ubuntu/
                  displayName: 'Deploy Repository'

                # - download: current
                #   artifact: repository
                # - script: |
                #     sudo unzip -v /home/ubuntu/azagent/_work/1/repository/repository.zip -d /home/ubuntu/
                #   displayName: 'Unpack Repository'
                - script: |
                    sudo cp /home/ubuntu/scripts/fyp.service /etc/systemd/system/
                    sudo systemctl daemon-reload
                    sudo systemctl enable fyp.service
                    echo "Service file deployed and enabled"
                  displayName: 'Deploy Service File'
                # - script: |
                #     cp -r /home/ubuntu/FYP_2024/FYP_2024/. /home/ubuntu/
                #     # cp /home/ubuntu/FYP_2024/FYP_2024/scripts/fyp.service /etc/systemd/system/
                #     echo "Files copied"
                #   displayName: 'Copy files'
                - script: |
                    sudo chmod 755 /home/ubuntu/scripts/install_dependencies.sh
                    sudo chmod 755 /home/ubuntu/scripts/start_app.sh
                    sudo chmod 755 /home/ubuntu/scripts/stop_app.sh
                    sudo chown root:root /home/ubuntu/scripts/*.sh
                    echo "Permissions set"
                  displayName: 'Set permissions'  
                - script: |
                    sudo /home/ubuntu/scripts/install_dependencies.sh
                  displayName: 'After Install - Install dependencies'
                - script: |
                    sudo /home/ubuntu/scripts/start_app.sh
                    echo "Application started"
                  displayName: 'Application Start'
                  timeoutInMinutes: 5
                
                


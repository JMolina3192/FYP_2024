version: 0.2

#phases:
#  pre_build:
#    commands:
#      - echo "Installing dependencies..."
#      - pip install -r requirements.txt
#  build:
#    commands:
#      - echo "Deploying Flask app to EC2 instance..."
      # Copy files using SCP using the environment variable for the private key
#      - echo "$PRIVATE_KEY" > TestProj1.pem
 #     - chmod 400 TestProj1.pem
#      - scp -o StrictHostKeyChecking=no -i TestProj1.pem app.py ubuntu@34.243.110.156:/ubuntu/
      # SSH into EC2 instance and perform setup
#      - ssh -o StrictHostKeyChecking=no -i pTestProj1.pem ubuntu@34.243.110.156 "sudo pip install flask && sudo systemctl restart flask"
      # Clean up
#      - rm private_key.pem
# env: 
#   parameter-store:
#     DOCKER_REGISTRY_USERNAME: /myapp/docker-credentials/username
#     DOCKER_REGISTRY_PASSWORD: /myapp/docker-credentials/password
#     DOCKER_REGISTRY_URL: /myapp/docker-registry/url

# phases:
#   install:
#     runtime-versions:
#       python: 3.9
#   pre_build:
#     commands:
#       - echo "Installing dependencies..."
#       - pip install -r requirements.txt
#   build:
#     commands:
#       - echo "Building Docker Image..."
#       - docker build -t "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/flask-awscodepipeline-app:latest"
#       - docker push "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/flask-awscodepipeline-app:latest"


phases:
  install:
    runtime-versions:
      python: 3.8
  pre_build:
    commands:
      - echo "Installing dependencies"
      - pip install -r requirements.txt
  build:
    commands:
      - echo "Building application"
      - python -m unittest discover
      - echo "Build completed on `date`"
  post_build:
    commands:
      - echo "Completed build on `date`"
artifacts:
  files:
    - '**/*'
  name: FlaskApp
